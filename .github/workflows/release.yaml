name: Create Release
env:
  VERSION: ${{ github.run_number }}

on:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with: { node-version: '24' }
        
      - name: installing dependencies
        run: npm ci
        
      - name: running linter
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with: { node-version: '24' }
        
      - name: installing dependencies
        run: npm ci
        
      - name: running tests
        run: npm run test

  create-release:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        
      - name: create release branch
        run: |
          git config user.name "github_actions"
          git config user.email "actions@github.com"
          git checkout -b releases/${{ env.VERSION }}
          git push origin releases/${{ env.VERSION }}
          
      - name: build & push docker
        env:
          YC_REGISTRY: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app
        run: |
          echo ${{ secrets.YC_OAUTH_TOKEN }} | docker login --username oauth --password-stdin cr.yandex
          docker build -t ${YC_REGISTRY}:${{ env.VERSION }} -t ${YC_REGISTRY}:${{ env.VERSION }}_latest .
          docker push ${YC_REGISTRY}:${{ env.VERSION }}
          docker push ${YC_REGISTRY}:${{ env.VERSION }}_latest
          
      - name: create git-tag
        run: |
          git tag ${{ env.VERSION }}
          git push origin ${{ env.VERSION }}

  update-changelog:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: releases/${{ env.VERSION }}
          fetch-depth: 0

      - name: configure git
        run: |
          git config user.name "github_actions"
          git config user.email "actions@github.com"

      - name: update CHANGELOG.md
        run: |
          PREV=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null \
               || git rev-list --max-parents=0 HEAD)

          echo "## ${{ env.VERSION }} — $(date +'%Y-%m-%d')" > tmp
          git log --pretty=format:'- %s' $PREV..HEAD >> tmp
          cat CHANGELOG.md >> tmp
          mv tmp CHANGELOG.md

          git commit -am "chore: update CHANGELOG for ${{ env.VERSION }}"
          git push origin releases/${{ env.VERSION }}

  create-issue:
    needs: update-changelog
    runs-on: ubuntu-latest
    steps:
      - name: сheckout release branch
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: releases/${{ env.VERSION }}
          fetch-depth: 0
    
      - name: create issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          YC_REGISTRY: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/app
        run: |
          gh issue create \
            --title "Release ${{ env.VERSION }}" \
            --body "$(cat <<EOF\
          
          **Date:** $(date +'%Y-%m-%d')
          
          **Author:** @${GITHUB_ACTOR}
          
          **Commits since last release:**
          $(git log --pretty=format:'- %s' $(git describe --tags --abbrev=0 HEAD^)..HEAD)
  
          **Docker image:**
          ${YC_REGISTRY}:${{ env.VERSION }}
          EOF
          )"
